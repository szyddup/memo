/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.example.asus;

public class openni2Device {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected openni2Device(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(openni2Device obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        UnixJNI.delete_openni2Device(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean init() {
    return UnixJNI.openni2Device_init(swigCPtr, this);
  }

  public void deInit() {
    UnixJNI.openni2Device_deInit(swigCPtr, this);
  }

  public boolean isValid() {
    return UnixJNI.openni2Device_isValid(swigCPtr, this);
  }

  public boolean hasIRSensor() {
    return UnixJNI.openni2Device_hasIRSensor(swigCPtr, this);
  }

  public boolean hasColorSensor() {
    return UnixJNI.openni2Device_hasColorSensor(swigCPtr, this);
  }

  public boolean hasDepthSensor() {
    return UnixJNI.openni2Device_hasDepthSensor(swigCPtr, this);
  }

  public boolean isImageRegistrationModeSupported() {
    return UnixJNI.openni2Device_isImageRegistrationModeSupported(swigCPtr, this);
  }

  public boolean setDepthColorSync(boolean enable) {
    return UnixJNI.openni2Device_setDepthColorSync(swigCPtr, this, enable);
  }

  public boolean setImageRegistrationMode(boolean enable) {
    return UnixJNI.openni2Device_setImageRegistrationMode(swigCPtr, this, enable);
  }

  public boolean setIRVideoMode(SWIGTYPE_p_openni__VideoMode mode) {
    return UnixJNI.openni2Device_setIRVideoMode(swigCPtr, this, SWIGTYPE_p_openni__VideoMode.getCPtr(mode));
  }

  public boolean setColorVideoMode(SWIGTYPE_p_openni__VideoMode mode) {
    return UnixJNI.openni2Device_setColorVideoMode(swigCPtr, this, SWIGTYPE_p_openni__VideoMode.getCPtr(mode));
  }

  public boolean setDepthVideoMode(SWIGTYPE_p_openni__VideoMode mode) {
    return UnixJNI.openni2Device_setDepthVideoMode(swigCPtr, this, SWIGTYPE_p_openni__VideoMode.getCPtr(mode));
  }

  public boolean getIRVideoMode(SWIGTYPE_p_openni__VideoMode mode) {
    return UnixJNI.openni2Device_getIRVideoMode(swigCPtr, this, SWIGTYPE_p_openni__VideoMode.getCPtr(mode));
  }

  public boolean getColorVideoMode(SWIGTYPE_p_openni__VideoMode mode) {
    return UnixJNI.openni2Device_getColorVideoMode(swigCPtr, this, SWIGTYPE_p_openni__VideoMode.getCPtr(mode));
  }

  public boolean getDepthVideoMode(SWIGTYPE_p_openni__VideoMode mode) {
    return UnixJNI.openni2Device_getDepthVideoMode(swigCPtr, this, SWIGTYPE_p_openni__VideoMode.getCPtr(mode));
  }

  public boolean setAutoWhiteBalance(boolean enable) {
    return UnixJNI.openni2Device_setAutoWhiteBalance(swigCPtr, this, enable);
  }

  public boolean setAutoExposure(boolean enable) {
    return UnixJNI.openni2Device_setAutoExposure(swigCPtr, this, enable);
  }

  public boolean setExposure(int n) {
    return UnixJNI.openni2Device_setExposure(swigCPtr, this, n);
  }

  public boolean setGain(int gain) {
    return UnixJNI.openni2Device_setGain(swigCPtr, this, gain);
  }

  public void setIRFrameCallback(SWIGTYPE_p_boost__functionT_void_fopenni__VideoFrameRef_RF_t cb) {
    UnixJNI.openni2Device_setIRFrameCallback(swigCPtr, this, SWIGTYPE_p_boost__functionT_void_fopenni__VideoFrameRef_RF_t.getCPtr(cb));
  }

  public void setColorFrameCallback(SWIGTYPE_p_boost__functionT_void_fopenni__VideoFrameRef_RF_t cb) {
    UnixJNI.openni2Device_setColorFrameCallback(swigCPtr, this, SWIGTYPE_p_boost__functionT_void_fopenni__VideoFrameRef_RF_t.getCPtr(cb));
  }

  public void setDepthFrameCallback(SWIGTYPE_p_boost__functionT_void_fopenni__VideoFrameRef_RF_t cb) {
    UnixJNI.openni2Device_setDepthFrameCallback(swigCPtr, this, SWIGTYPE_p_boost__functionT_void_fopenni__VideoFrameRef_RF_t.getCPtr(cb));
  }

  public boolean startIRStream() {
    return UnixJNI.openni2Device_startIRStream(swigCPtr, this);
  }

  public boolean startColorStream() {
    return UnixJNI.openni2Device_startColorStream(swigCPtr, this);
  }

  public boolean startDepthStream() {
    return UnixJNI.openni2Device_startDepthStream(swigCPtr, this);
  }

  public void stopIRStream() {
    UnixJNI.openni2Device_stopIRStream(swigCPtr, this);
  }

  public void stopColorStream() {
    UnixJNI.openni2Device_stopColorStream(swigCPtr, this);
  }

  public void stopDepthStream() {
    UnixJNI.openni2Device_stopDepthStream(swigCPtr, this);
  }

  public void stopAllStream() {
    UnixJNI.openni2Device_stopAllStream(swigCPtr, this);
  }

  public boolean isIRStreamStarted() {
    return UnixJNI.openni2Device_isIRStreamStarted(swigCPtr, this);
  }

  public boolean isColorStreamStarted() {
    return UnixJNI.openni2Device_isColorStreamStarted(swigCPtr, this);
  }

  public boolean isDepthStreamStarted() {
    return UnixJNI.openni2Device_isDepthStreamStarted(swigCPtr, this);
  }

  public boolean syncGetFrame(SWIGTYPE_p_openni__VideoFrameRef frame) {
    return UnixJNI.openni2Device_syncGetFrame(swigCPtr, this, SWIGTYPE_p_openni__VideoFrameRef.getCPtr(frame));
  }

}
